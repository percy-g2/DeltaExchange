apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "crypto.delta.exchange.openexchange"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 7
        versionName "beta-1.2"
       // ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    
    buildFeatures{
        viewBinding  = true
    }

    buildTypes {
        release {
            versionNameSuffix ''
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        unsigned {
            versionNameSuffix '-unsigned'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig null
        }
        debug {
            versionNameSuffix '-debug'
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "DeltaExchange-${variant.versionName}.apk"
            }
        }
    }

    /**
     * Configure your build for multiple apk's.
     *
     * To configure your build for multiple apks. add a splits to your module-level 'build.gradle' file.
     *
     * Within the 'splits' block, provide a 'density' block that specifies how Gradle build generate pre-density apks.
     * an 'abi(application binary interfaces)' block that specifies how gradle should generate pre-ABI APKS.
     */
      splits {
    /**
     * Configure multiple APKs for ABIs
     *
     * Android Plugin for Gradle 3.1.0 and higher no longer generate APKs for the following ABIs by default: mips, mips64, and armeabi.
     * That's because NDK r17 and higher no longer include these ABIs as supported targets.
     *
     * universalApk:
     */
    // Configures multiple APKs based on ABI.
         abi {

    // Enables building multiple APKs per ABI.
            enable true

    // By default all ABIs are included, so use reset() and include to specify that we only
    // want APKs for x86 and x86_64.

    // Resets the list of ABIs that Gradle should create APKs for to none.
           reset()

    // Specifies a list of ABIs that Gradle should create APKs for.
           include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

    // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
     }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    implementation 'com.tinder.scarlet:scarlet:0.1.10'
    // Optional
    implementation "com.tinder.scarlet:websocket-okhttp:0.1.10"
    implementation "com.tinder.scarlet:stream-adapter-rxjava2:0.1.10"
    implementation "com.tinder.scarlet:message-adapter-moshi:0.1.10"
    implementation "com.tinder.scarlet:lifecycle-android:0.1.10"

    //charts
    implementation 'com.liihuu.widget:klinechart:2.2.3'

    //tickseekbar
    implementation 'com.github.warkiz.tickseekbar:tickseekbar:0.1.4'

    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.github.GrenderG:Toasty:1.4.2'

    implementation "androidx.security:security-crypto:1.1.0-alpha01"

    implementation 'com.github.mreram:showcaseview:1.1'

    implementation 'com.github.pwittchen:reactivenetwork-rx2:3.0.8'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
